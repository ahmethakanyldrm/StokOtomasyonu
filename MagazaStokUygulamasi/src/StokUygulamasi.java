import java.util.Date;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ahaka
 */
public class StokUygulamasi extends javax.swing.JFrame {

    /**
     * Creates new form StokUygulamasi
     */
    public StokUygulamasi() {
        initComponents();
        getConnection();
        urunleri_tabloya_aktar();
        setResizable(false);
        
    }
    
    Connection getConnection(){
         Connection cn=null;
        try {
            cn=DriverManager.getConnection("jdbc:mysql://localhost/stokuygulamasi?useUnicode=true&characterEnconding=utf8", "root", "12345");
            System.out.println("Veri Tabanı bağlantısı başarılı bir şekilde sağlandı");
            return cn;
        } catch (SQLException ex) {
             System.out.println("Veri Tabanı bağlantısı başarısız");
            Logger.getLogger(StokUygulamasi.class.getName()).log(Level.SEVERE, null, ex);
             return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        urun_alis_fiyati = new javax.swing.JTextField();
        urun_adi = new javax.swing.JTextField();
        stok_miktari = new javax.swing.JTextField();
        urun_kodu = new javax.swing.JTextField();
        urun_alis_tarihi = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stok Otomasyonu");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Ürün Kodu:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Stok Miktarı:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Ürün Adı:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Ürün Alış Fiyatı:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Ürün Alış Tarihi:");

        urun_alis_fiyati.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        urun_adi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        stok_miktari.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stok_miktari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stok_miktariActionPerformed(evt);
            }
        });

        urun_kodu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        urun_kodu.setEnabled(false);

        urun_alis_tarihi.setDateFormatString("dd-MM-yyyy");
        urun_alis_tarihi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Kodu", "Stok Miktarı(Adet)", "Ürün Adı", "Ürün Alış Fiyat (Birim Fiyat-TL)", "Ürün Alış Tarihi"
            }
        ));
        tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablo);
        if (tablo.getColumnModel().getColumnCount() > 0) {
            tablo.getColumnModel().getColumn(0).setResizable(false);
            tablo.getColumnModel().getColumn(1).setResizable(false);
            tablo.getColumnModel().getColumn(2).setResizable(false);
            tablo.getColumnModel().getColumn(3).setResizable(false);
            tablo.getColumnModel().getColumn(3).setPreferredWidth(100);
            tablo.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Ekle.png"))); // NOI18N
        jButton1.setText("Ürün Ekle");
        jButton1.setIconTextGap(30);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Guncelle_48x48.jpg"))); // NOI18N
        jButton2.setText("Ürün Güncelle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Sil_48x48.jpg"))); // NOI18N
        jButton3.setText("Ürün Sil");
        jButton3.setIconTextGap(30);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Cikis.png"))); // NOI18N
        jButton4.setText("Çıkış Yap");
        jButton4.setIconTextGap(40);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(urun_alis_tarihi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urun_adi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stok_miktari, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(urun_kodu, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(urun_alis_fiyati, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(urun_kodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(stok_miktari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(urun_adi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(urun_alis_fiyati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(urun_alis_tarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(kontrolEt()){
    try {
        Connection con=getConnection();
 PreparedStatement ps=con.prepareStatement("Insert Into stok(stok_miktari,urun_adi,urun_fiyati,urun_alis_tarihi) VALUES (?,?,?,?)");
  ps.setString(1, stok_miktari.getText());
              ps.setString(2, urun_adi.getText());
                ps.setString(3, urun_alis_fiyati.getText());
                SimpleDateFormat dateFormat=new SimpleDateFormat("dd-MM-yyyy");
                String tarih=dateFormat.format(urun_alis_tarihi.getDate());
                 ps.setString(4, tarih);
                 ps.executeUpdate();
                  urunleri_tabloya_aktar();
                JOptionPane.showMessageDialog(null,"Ürün Eklendi");
                stok_miktari.setText("");
                urun_adi.setText("");
                urun_alis_fiyati.setText("");
                
    } catch (Exception e) {
        
        e.printStackTrace();
    }
}else{
    
      JOptionPane.showMessageDialog(null,"Boş değer Tanımlanamaz");
}
    
       
    }//GEN-LAST:event_jButton1ActionPerformed
 boolean kontrolEt(){
     if(stok_miktari.getText()==null || urun_adi.getText()==null || urun_alis_fiyati.getText()==null || urun_alis_tarihi.getDate()==null){
         return false;
     }else{
         Float.parseFloat(urun_alis_fiyati.getText());
         return true;
     }
 }
    
    private void stok_miktariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stok_miktariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stok_miktariActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            Connection con=getConnection();
            PreparedStatement ps=con.prepareStatement("UPDATE stok SET stok_miktari= ?, urun_adi=?, urun_fiyati=?,urun_alis_tarihi=? WHERE urun_kodu=?");
             ps.setString(1, stok_miktari.getText());
              ps.setString(2, urun_adi.getText());
                ps.setString(3, urun_alis_fiyati.getText());
                  SimpleDateFormat dateFormat=new SimpleDateFormat("dd-MM-yyyy");
                String tarih=dateFormat.format(urun_alis_tarihi.getDate());
                 ps.setString(4, tarih);
                ps.setInt(5, Integer.valueOf(urun_kodu.getText()));
                ps.executeUpdate();
                  urunleri_tabloya_aktar();
                 JOptionPane.showMessageDialog(null,"Ürün Güncellendi");
                  stok_miktari.setText("");
                urun_adi.setText("");
                urun_alis_fiyati.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(!urun_kodu.equals("")){
           try {
                 Connection con=getConnection();
            PreparedStatement ps=con.prepareStatement("DELETE FROM stok WHERE urun_kodu=?");
          int urunK=  Integer.parseInt(urun_kodu.getText());
          ps.setInt(1, urunK);
            ps.executeUpdate();
              urunleri_tabloya_aktar();
                JOptionPane.showMessageDialog(null,"Ürün Silindi");
                   urun_kodu.setText("");
                   stok_miktari.setText("");
                urun_adi.setText("");
                urun_alis_fiyati.setText("");

           } catch (Exception e) {
               e.printStackTrace();
           }
       }else{
            JOptionPane.showMessageDialog(null,"Silinecek Ürün Kodu Yok");
       }
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabloMouseClicked

        int index=tablo.getSelectedRow();
        try {
            urunleriGoster(index);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tabloMouseClicked

    ArrayList<Sutunlar>getSutunlar(){
        ArrayList<Sutunlar>urun_listesi=new ArrayList<>();
        Connection con=getConnection();
       String sorgu= "SELECT* FROM stok";
       Statement st;
        try {
            ResultSet rs;
            st=con.createStatement();
            rs=st.executeQuery(sorgu);
            
            Sutunlar s;
            
            while(rs.next()){
                s=new Sutunlar(rs.getInt("urun_kodu"), rs.getInt("stok_miktari"), rs.getString("urun_adi"), Float.parseFloat(rs.getString("urun_fiyati")), rs.getString("urun_alis_tarihi"));
                urun_listesi.add(s);
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            
        }
        return urun_listesi;
    }
    void urunleri_tabloya_aktar(){
        try {
            ArrayList<Sutunlar>list=getSutunlar();
            DefaultTableModel model=(DefaultTableModel) tablo.getModel();
            model.setRowCount(0);
            Object [] satir=new Object[5];
            for(int i=0; i<list.size(); i++){
                satir[0]=list.get(i).getUrun_kodu();
                satir[1]=list.get(i).getStok_miktari();
                 satir[2]=list.get(i).getUrun_adi();
                  satir[3]=list.get(i).getUrun_fiyati();
                   satir[4]=list.get(i).getUrun_alis_tarihi();
                   
                   model.addRow(satir);
                   
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    void urunleriGoster(int index){
        try {
            urun_kodu.setText(Integer.toString(getSutunlar().get(index).getUrun_kodu()));
            stok_miktari.setText(Integer.toString(getSutunlar().get(index).getStok_miktari()));
            urun_adi.setText(getSutunlar().get(index).getUrun_adi());
            urun_alis_fiyati.setText(Float.toString(getSutunlar().get(index).getUrun_fiyati()));
            Date tarih=new SimpleDateFormat("dd-MM-yyyy").parse((String)getSutunlar().get(index).getUrun_alis_tarihi());
            urun_alis_tarihi.setDate(tarih);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StokUygulamasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField stok_miktari;
    private javax.swing.JTable tablo;
    private javax.swing.JTextField urun_adi;
    private javax.swing.JTextField urun_alis_fiyati;
    private com.toedter.calendar.JDateChooser urun_alis_tarihi;
    private javax.swing.JTextField urun_kodu;
    // End of variables declaration//GEN-END:variables
}
